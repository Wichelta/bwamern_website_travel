{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\react-projects\\\\bwamern-website-travel\\\\client\\\\src\\\\elements\\\\Form\\\\InputText\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse\n  } = props;\n  const [HasError, setHasError] = useState(null);\n  let pattern = \"\";\n  if (type === \"email\") pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === \"tel\") pattern = \"[0-9]*\";\n  const onChange = event => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value\n      }\n    };\n    if (type === \"email\") {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);else setHasError(null);\n    }\n    if (type === \"tel\") {\n      if (event.target.validity.valid) props.onChange(target);\n    } else {\n      props.onChange(target);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"input-text mb-3\", outerClassName].join(\" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [prepend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: prepend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: name,\n        type: type,\n        pattern: pattern,\n        className: [\"form-control\", inputClassName].join(\" \"),\n        value: value,\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), append && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: append\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), HasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-helper\",\n      children: HasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Text, \"XLOKJrIg1/Lga1Mf74oe/AAi55o=\");\n_c = Text;\nText.defaultProps = {\n  type: \"text\",\n  pattern: \"\",\n  placeholder: \"Please type here...\",\n  errorResponse: \"Please match the requested format.\"\n};\nText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","propTypes","Text","props","value","type","placeholder","name","prepend","append","outerClassName","inputClassName","errorResponse","HasError","setHasError","pattern","onChange","event","target","test","validity","valid","join","defaultProps","string","isRequired","oneOfType","number","func"],"sources":["D:/Dev/react-projects/bwamern-website-travel/client/src/elements/Form/InputText/index.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport propTypes from \"prop-types\"\r\n\r\nimport \"./index.scss\"\r\n\r\nexport default function Text(props) {\r\n    const {\r\n        value,\r\n        type,\r\n        placeholder,\r\n        name,\r\n        prepend,\r\n        append,\r\n        outerClassName,\r\n        inputClassName,\r\n        errorResponse,\r\n    } = props\r\n\r\n    const [HasError, setHasError] = useState(null)\r\n    let pattern = \"\"\r\n    if (type === \"email\") pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    if (type === \"tel\") pattern = \"[0-9]*\"\r\n\r\n    const onChange = (event) => {\r\n        const target = {\r\n            target: {\r\n                name: name,\r\n                value: event.target.value,\r\n            }\r\n        }\r\n\r\n        if (type === \"email\") {\r\n            if (!pattern.test(event.target.value)) setHasError(errorResponse)\r\n            else setHasError(null)\r\n        }\r\n\r\n        if (type === \"tel\") {\r\n            if (event.target.validity.valid) props.onChange(target)\r\n        } else {\r\n            props.onChange(target)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={[\"input-text mb-3\", outerClassName].join(\" \")}>\r\n            <div className=\"input-group\">\r\n                {prepend && (\r\n                    <div className=\"input-group-prepend bg-gray-900\">\r\n                        <span className=\"input-group-text\">{prepend}</span>\r\n                    </div>\r\n                )}\r\n                <input\r\n                    name={name}\r\n                    type={type}\r\n                    pattern={pattern}\r\n                    className={[\"form-control\", inputClassName].join(\" \")}\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                />\r\n                {append && (\r\n                    <div className=\"input-group-append bg-gray-900\">\r\n                        <span className=\"input-group-text\">{append}</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {HasError && <span className=\"error-helper\">{HasError}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nText.defaultProps = {\r\n    type: \"text\",\r\n    pattern: \"\",\r\n    placeholder: \"Please type here...\",\r\n    errorResponse: \"Please match the requested format.\",\r\n}\r\n\r\nText.propTypes = {\r\n    name: propTypes.string.isRequired,\r\n    value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\r\n    onChange: propTypes.func.isRequired,\r\n    prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n    append: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n    type: propTypes.string,\r\n    placeholder: propTypes.string,\r\n    outerClassName: propTypes.string,\r\n    inputClassName: propTypes.string,\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}